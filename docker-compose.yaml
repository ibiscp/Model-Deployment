version: '3.8'

services:
  minio:
    # hostname: minio
    build: ./containers/minio
    # image: minio/minio:latest
    # entrypoint: ./containers/minio_entrypoint.sh
    # command: server /data --address :9000 --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - default
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./data/minio/:/data

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    volumes:
       - ./data/postgres/:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
       - ./data/pgadmin/:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - default

  mlflow:
    restart: always
    build: ./containers/mlflow
    ports:
      - "5001:5000"
    networks:
      - default
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
    depends_on:
      - minio
      - postgres
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB} --default-artifact-root s3://${AWS_S3_BUCKET_NAME}/ --host 0.0.0.0

  server:
    restart: always
    build: ./containers/server
    ports:
      - "8003:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:Z
    networks:
      - default
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}

networks:
  default:
